"use strict";(self.webpackChunk_zjlab_fe_data_hub_ui=self.webpackChunk_zjlab_fe_data_hub_ui||[]).push([[632],{85632:(n,r,t)=>{t.r(r),t.d(r,{default:()=>e});const e="# TipTap 富文本编辑器\r\n\r\n一个基于 [TipTap](https://tiptap.dev/) 和 React 构建的功能强大的富文本编辑器组件。该组件提供可编辑的编辑器和只读查看器，具备丰富的格式化功能。\r\n\r\n## 功能特性\r\n\r\n### ✨ 富文本格式化\r\n- **文本样式**: 粗体、斜体、删除线、下划线\r\n- **标题**: H1、H2、H3、H4、H5、H6\r\n- **文本对齐**: 左对齐、居中、右对齐、两端对齐\r\n- **字体大小**: 可自定义字体大小\r\n- **文本颜色和突出显示**: 多色文本和背景突出显示\r\n- **列表**: 项目符号和编号列表\r\n\r\n### 📝 高级内容\r\n- **链接**: 创建和修改超链接\r\n- **图片**: 支持 base64 编码的内联图片\r\n- **表格**: 可调整大小的表格，支持表头单元格\r\n- **代码块**: 语法高亮的代码块\r\n- **引用**: 块引用支持\r\n- **水平分割线**: 分隔线\r\n\r\n### 🎯 用户体验\r\n- **浮动菜单**: 上下文感知的气泡菜单和段落菜单\r\n- **固定工具栏**: 始终可访问的格式化工具栏\r\n- **拖拽功能**: 文件和内容拖拽支持\r\n- **粘贴处理**: 智能粘贴处理各种内容类型\r\n\r\n## 代码演示\r\n\r\n<demo src=\"@/components/tip-tap/demo/index.tsx\"></demo>\r\n\r\n### 基础编辑器\r\n\r\n```tsx\r\nimport Tiptap from './components/tip-tap';\r\n\r\nfunction MyComponent() {\r\n  const editorRef = useRef<{ getContent: () => string }>(null);\r\n\r\n  const handleSave = () => {\r\n    const content = editorRef.current?.getContent();\r\n    console.log('编辑器内容:', content);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tiptap \r\n        ref={editorRef}\r\n        content=\"<p>在此开始输入...</p>\"\r\n      />\r\n      <button onClick={handleSave}>保存内容</button>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n### 只读查看器\r\n\r\n```tsx\r\nimport { TipTapReader } from './components/tip-tap';\r\n\r\nfunction ContentViewer({ content }: { content: string }) {\r\n  return (\r\n    <TipTapReader content={content} />\r\n  );\r\n}\r\n```\r\n\r\n### 自定义样式\r\n\r\n```tsx\r\n<Tiptap\r\n  ref={editorRef}\r\n  content={content}\r\n  classNames={{\r\n    fixedMenu: 'custom-toolbar',\r\n    editorContainer: 'custom-editor',\r\n    bubbleMenu: 'custom-bubble-menu',\r\n    linkFloatingMenu: 'custom-link-menu',\r\n    paragraphFloatingMenu: 'custom-paragraph-menu'\r\n  }}\r\n/>\r\n```\r\n\r\n## API 参考\r\n\r\n### Tiptap 组件\r\n\r\n#### 属性\r\n\r\n| 属性 | 类型 | 必填 | 描述 |\r\n|------|------|------|------|\r\n| `content` | `string` | ✅ | 编辑器的初始 HTML 内容 |\r\n| `classNames` | `object` | ❌ | 自定义 CSS 类名用于样式设置 |\r\n| `ref` | `RefObject` | ❌ | 用于访问编辑器方法的引用 |\r\n\r\n#### ClassNames 对象\r\n\r\n```tsx\r\n{\r\n  fixedMenu?: string;           // 固定工具栏样式\r\n  editorContainer?: string;     // 主编辑器容器\r\n  bubbleMenu?: string;         // 浮动气泡菜单\r\n  linkFloatingMenu?: string;   // 链接编辑菜单\r\n  paragraphFloatingMenu?: string; // 段落格式化菜单\r\n}\r\n```\r\n\r\n#### Ref 方法\r\n\r\n| 方法 | 返回值 | 描述 |\r\n|------|--------|------|\r\n| `getContent()` | `string` | 返回当前的 HTML 内容 |\r\n\r\n### TipTapReader 组件\r\n\r\n#### 属性\r\n\r\n| 属性 | 类型 | 必填 | 描述 |\r\n|------|------|------|------|\r\n| `content` | `string` | ✅ | 要显示的 HTML 内容 |\r\n\r\n## 扩展功能\r\n\r\n编辑器包含以下 TipTap 扩展：\r\n\r\n- **StarterKit**: 基础文本编辑功能\r\n- **Table**: 可调整大小的表格，支持表头\r\n- **Image**: 内联图片处理\r\n- **Highlight**: 多色文本突出显示\r\n- **Color**: 文本和背景颜色支持\r\n- **TextStyle**: 高级文本样式\r\n- **TextAlign**: 文本对齐选项\r\n- **CodeBlockLowlight**: 语法高亮的代码块\r\n- **FontSize**: 自定义字体大小支持\r\n- **DropHandler**: 拖拽功能\r\n- **PasteHandler**: 智能粘贴处理\r\n\r\n## 自定义\r\n\r\n### 添加自定义扩展\r\n\r\n```tsx\r\n// 在 extensions/index.ts 中\r\nimport CustomExtension from '@tiptap/extension-custom';\r\n\r\nexport const editorExtensions = [\r\n  ...baseExtensions,\r\n  CustomExtension.configure({\r\n    // 扩展配置\r\n  }),\r\n];\r\n```\r\n\r\n### 自定义样式\r\n\r\n组件使用 CSS 模块，支持通过以下方式自定义样式：\r\n\r\n- `index.css` - 主组件样式\r\n- `table.css` - 表格特定样式\r\n- `code-block.css` - 代码块样式\r\n- `BubbleMenu.css` - 浮动菜单样式\r\n\r\n## 示例\r\n\r\n### 表单集成\r\n\r\n```tsx\r\nimport { Form, Button } from 'antd';\r\nimport Tiptap from './components/tip-tap';\r\n\r\nfunction RichTextForm() {\r\n  const [form] = Form.useForm();\r\n  const editorRef = useRef();\r\n\r\n  const onFinish = (values) => {\r\n    const content = editorRef.current?.getContent();\r\n    console.log('表单值:', { ...values, content });\r\n  };\r\n\r\n  return (\r\n    <Form form={form} onFinish={onFinish}>\r\n      <Form.Item name=\"title\" label=\"标题\">\r\n        <Input />\r\n      </Form.Item>\r\n      \r\n      <Form.Item name=\"content\" label=\"内容\">\r\n        <Tiptap ref={editorRef} content=\"\" />\r\n      </Form.Item>\r\n      \r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        提交\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n```\r\n\r\n### 内容管理\r\n\r\n```tsx\r\nfunction ContentManager() {\r\n  const [savedContent, setSavedContent] = useState('');\r\n  const editorRef = useRef();\r\n\r\n  const saveContent = () => {\r\n    const content = editorRef.current?.getContent();\r\n    setSavedContent(content);\r\n    // 保存到后端或 localStorage\r\n  };\r\n\r\n  const loadContent = (content) => {\r\n    // 从后端或 localStorage 加载内容\r\n    setSavedContent(content);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tiptap \r\n        ref={editorRef}\r\n        content={savedContent}\r\n      />\r\n      <div>\r\n        <button onClick={saveContent}>保存</button>\r\n        <button onClick={() => loadContent('<p>已加载的内容</p>')}>\r\n          加载示例\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n## 浏览器支持\r\n\r\n- Chrome 60+\r\n- Firefox 55+\r\n- Safari 12+\r\n- Edge 79+\r\n\r\n## 依赖\r\n\r\n- React 16.8+\r\n- TipTap 2.0+\r\n- Lowlight (用于代码语法高亮)\r\n\r\n## 贡献\r\n\r\n1. Fork 仓库\r\n2. 创建功能分支\r\n3. 进行更改\r\n4. 如果适用，添加测试\r\n5. 提交拉取请求\r\n\r\n## 许可证\r\n\r\n此组件是 data-hub-ui 项目的一部分。请参考项目的主要许可证文件了解详情。\r\n"}}]);